version: '3.4'
services:
  zoo001:
    image: zookeeper:3.4
    ports:
    - "2181:2181"
    restart: always
    environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=zoo001:2888:3888
    networks:
      backend:
        aliases:
        - zoo001

  broker001:
    image: wurstmeister/kafka:1.1.0 
    ports:
    - "9091:9092"
    restart: always
    depends_on:
      - zoo001
    environment:
    - KAFKA_BROKER_ID=1        
    - KAFKA_ZOOKEEPER_CONNECT=zoo001:2181
    - KAFKA_LISTENERS=PLAINTEXT://broker001:9092
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.164.204.153:9091
    - KAFKA_AUTO_CREATE_TOPICS='enable'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
      backend:
        aliases:
        - broker001
  kafka-manager:
    image: sheepkiller/kafka-manager:1.3.0.4
    ports:
    - "9000:9000"
    restart: always
    environment:
    - ZK_HOSTS=zoo001:2181
    networks:
      backend:
        aliases:
        - kafka-manager      
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  portainer:
    image: portainer/portainer
    ports:
      - "9001:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:

networks:
  backend:
    external:
      name: backend